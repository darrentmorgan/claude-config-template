{
  "env": {
    "NODE_OPTIONS": "--max-old-space-size=16384"
  },
  "permissions": {
    "allow": [
      "Bash",
      "Edit",
      "Read",
      "Write",
      "NotebookEdit",
      "mcp__chrome-devtools",
      "mcp__chrome-devtools__click",
      "mcp__chrome-devtools__drag",
      "mcp__chrome-devtools__fill",
      "mcp__chrome-devtools__fill_form",
      "mcp__chrome-devtools__handle_dialog",
      "mcp__chrome-devtools__hover",
      "mcp__chrome-devtools__upload_file",
      "mcp__chrome-devtools__close_page",
      "mcp__chrome-devtools__list_pages",
      "mcp__chrome-devtools__navigate_page",
      "mcp__chrome-devtools__navigate_page_history",
      "mcp__chrome-devtools__new_page",
      "mcp__chrome-devtools__select_page",
      "mcp__chrome-devtools__wait_for",
      "mcp__chrome-devtools__emulate_cpu",
      "mcp__chrome-devtools__emulate_network",
      "mcp__chrome-devtools__resize_page",
      "mcp__chrome-devtools__performance_analyze_insight",
      "mcp__chrome-devtools__performance_start_trace",
      "mcp__chrome-devtools__performance_stop_trace",
      "mcp__chrome-devtools__get_network_request",
      "mcp__chrome-devtools__list_network_requests",
      "mcp__chrome-devtools__evaluate_script",
      "mcp__chrome-devtools__list_console_messages",
      "mcp__chrome-devtools__take_screenshot",
      "mcp__chrome-devtools__take_snapshot",
      "mcp__supabase",
      "mcp__clickup",
      "mcp__firecrawl-mcp",
      "mcp__Context7",
      "mcp__ide",
      "WebSearch",
      "WebFetch",
      "Glob",
      "Grep",
      "Task",
      "TodoWrite",
      "SlashCommand",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git checkout --branch:*)",
      "Bash(gh pr create:*)"
    ],
    "deny": [
      "Bash(rm -rf:*)",
      "Bash(rm -rf /:*)",
      "Read(*/secrets/*)"
    ]
  },
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "\"$CLAUDE_PROJECT_DIR\"/.claude/hooks/tool.bash.block.sh \"$COMMAND\"",
            "timeout": 5,
            "blockOnFailure": true
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Edit",
        "hooks": [
          {
            "type": "command",
            "command": "\"$CLAUDE_PROJECT_DIR\"/.claude/hooks/tool-use.sh \"$FILE_PATH\"",
            "timeout": 30
          }
        ]
      },
      {
        "matcher": "Write",
        "hooks": [
          {
            "type": "command",
            "command": "\"$CLAUDE_PROJECT_DIR\"/.claude/hooks/tool-use.sh \"$FILE_PATH\"",
            "timeout": 30
          }
        ]
      },
      {
        "matcher": "Bash(git push:*)",
        "hooks": [
          {
            "type": "command",
            "command": "\"$CLAUDE_PROJECT_DIR\"/.claude/hooks/post-git-push.sh",
            "timeout": 10
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "\"$CLAUDE_PROJECT_DIR\"/.claude/hooks/user-prompt-submit.sh \"$USER_MESSAGE\"",
            "timeout": 10
          },
          {
            "type": "command",
            "command": "\"$CLAUDE_PROJECT_DIR\"/.claude/hooks/pre-request-router.sh \"$USER_MESSAGE\"",
            "timeout": 10
          },
          {
            "type": "command",
            "command": "\"$CLAUDE_PROJECT_DIR\"/.claude/hooks/plugin-router.sh \"$USER_MESSAGE\"",
            "timeout": 5
          }
        ]
      }
    ]
  }
}